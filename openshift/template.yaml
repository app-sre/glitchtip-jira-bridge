apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: glitchtip-jira-bridge
metadata:
  name: glitchtip-jira-bridge
  annotations:
    description: glitchtip-jira-bridge
objects:
# ------- WEB DEPLOYMENT --------------------
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: glitchtip-jira-bridge-web
    labels:
      app.kubernetes.io/component: web
      app.kubernetes.io/name: glitchtip-jira-bridge

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      ignore-check.kube-linter.io/unset-cpu-requirements: "no cpu limits"
    labels:
      app.kubernetes.io/component: web
      app.kubernetes.io/name: glitchtip-jira-bridge
    name: glitchtip-jira-bridge-web
  spec:
    replicas: ${{GJB_WEB_REPLICAS}}
    selector:
      matchLabels:
        app.kubernetes.io/component: web
        app.kubernetes.io/name: glitchtip-jira-bridge
    template:
      metadata:
        labels:
          app.kubernetes.io/component: web
          app.kubernetes.io/name: glitchtip-jira-bridge
      spec:
        restartPolicy: Always
        serviceAccountName: glitchtip-jira-bridge-web
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                  - web
              topologyKey: "kubernetes.io/hostname"
        containers:
        - env:
          - name: GJB_START_MODE
            value: web
          - name: GJB_APP_PORT
            value: "${GJB_APP_PORT}"
          envFrom:
            - secretRef:
                name: glitchtip-jira-bridge-secret
                optional: true
            - configMapRef:
                name: glitchtip-jira-bridge-config
                optional: true
          image: "${IMAGE}:${IMAGE_TAG}"
          name: web
          ports:
          - containerPort: ${{GJB_APP_PORT}}
          lifecycle:
            preStop:
              exec:
                command:
                  - sh
                  - "-c"
                  - sleep 5
          readinessProbe:
            httpGet:
              path: /healthz
              port: ${{GJB_APP_PORT}}
            periodSeconds: 15
            timeoutSeconds: 5
          startupProbe:
            tcpSocket:
              port: ${{GJB_APP_PORT}}
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 5
          livenessProbe:
            tcpSocket:
              port: ${{GJB_APP_PORT}}
            periodSeconds: 30
            timeoutSeconds: 5
          resources:
            requests:
              cpu: ${{GJB_WEB_CPU_REQUESTS}}
              memory: ${{GJB_WEB_MEMORY_REQUESTS}}
            limits:
              memory: ${{GJB_WEB_MEMORY_LIMITS}}

# ---------- WEB SERVICE -----------
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app.kubernetes.io/component: web
      app.kubernetes.io/name: glitchtip-jira-bridge
    name: glitchtip-jira-bridge-web
  spec:
    ports:
    - name: "8000"
      port: ${{GJB_APP_PORT}}
      targetPort: ${{GJB_APP_PORT}}
    selector:
      app.kubernetes.io/component: web
      app.kubernetes.io/name: glitchtip-jira-bridge

# --------- WORKER DEPLOYMENT --------------
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: glitchtip-jira-bridge-worker
    labels:
      app.kubernetes.io/component: worker
      app.kubernetes.io/name: glitchtip-jira-bridge

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      ignore-check.kube-linter.io/unset-cpu-requirements: "no cpu limits"
    labels:
      app.kubernetes.io/component: worker
      app.kubernetes.io/name: glitchtip-jira-bridge
    name: glitchtip-jira-bridge-worker
  spec:
    replicas: ${{GJB_WORKER_REPLICAS}}
    selector:
      matchLabels:
        app.kubernetes.io/component: worker
        app.kubernetes.io/name: glitchtip-jira-bridge
    template:
      metadata:
        labels:
          app.kubernetes.io/component: worker
          app.kubernetes.io/name: glitchtip-jira-bridge
      spec:
        restartPolicy: Always
        serviceAccountName: glitchtip-jira-bridge-worker
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/component
                  operator: In
                  values:
                  - worker
              topologyKey: "kubernetes.io/hostname"
        initContainers:
        - resources:
            limits:
              memory: 20Mi
            requests:
              cpu: 15m
              memory: 10Mi
          name: fluentd-config
          command:
          - /bin/sh
          - '-c'
          env:
          - name: SLACK_WEBHOOK_URL
            value: "${GJB_SLACK_WEBHOOK_URL}"
          - name: SLACK_CHANNEL
            value: "${GJB_SLACK_CHANNEL}"
          - name: SLACK_ICON_EMOJI
            value: "${GJB_SLACK_ICON_EMOJI}"
          - name: SLACK_USERNAME
            value: "${GJB_SLACK_USERNAME}"
          volumeMounts:
          - name: fluentd-config
            mountPath: /fluentd/etc/
          terminationMessagePolicy: File
          image: 'quay.io/app-sre/ubi8-ubi-minimal:8.9'
          args:
          - |
            # generate fluent.conf
            cat > /fluentd/etc/fluent.conf <<EOF
            <source>
              @type tail
              path /fluentd/log/integration.log
              read_from_head true
              pos_file /fluentd/log/integration.log.pos
              tag integration
              <parse>
                @type none
              </parse>
            </source>

            <filter integration>
              @type grep
              <regexp>
                key message
                pattern /: GJB\]/
              </regexp>
            </filter>

            <match integration>
              @type copy
              <store>
                @type slack
                webhook_url ${SLACK_WEBHOOK_URL}
                channel ${SLACK_CHANNEL}
                icon_emoji ${SLACK_ICON_EMOJI}
                username ${SLACK_USERNAME}
                flush_interval 10s
                message "\`\`\`[glitchtip-jira-bridge] %s\`\`\`"
              </store>
            </match>
            EOF
        containers:
        - env:
          - name: GJB_START_MODE
            value: worker
          - name: GJB_WORKER_METRICS_PORT
            value: "${GJB_WORKER_METRICS_PORT}"
          - name: LOG_FILE
            value: /fluentd/log/integration.log
          envFrom:
            - secretRef:
                name: glitchtip-jira-bridge-secret
                optional: true
            - configMapRef:
                name: glitchtip-jira-bridge-config
                optional: true
          image: "${IMAGE}:${IMAGE_TAG}"
          name: worker
          ports:
          - containerPort: ${{GJB_WORKER_METRICS_PORT}}
          readinessProbe:
            httpGet:
              path: /metrics
              port: ${{GJB_WORKER_METRICS_PORT}}
            periodSeconds: 15
            timeoutSeconds: 5
          startupProbe:
            tcpSocket:
              port: ${{GJB_WORKER_METRICS_PORT}}
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 5
          livenessProbe:
            tcpSocket:
              port: ${{GJB_WORKER_METRICS_PORT}}
            periodSeconds: 30
            timeoutSeconds: 5
          resources:
            requests:
              cpu: ${{GJB_WORKER_CPU_REQUESTS}}
              memory: ${{GJB_WORKER_MEMORY_REQUESTS}}
            limits:
              memory: ${{GJB_WORKER_MEMORY_LIMITS}}
          volumeMounts:
            - name: logs
              mountPath: /fluentd/log/
        - name: fluentd
          image: 'quay.io/app-sre/fluentd:5ab855d'
          resources:
            limits:
              memory: 120Mi
            requests:
              cpu: 15m
              memory: 30Mi
          volumeMounts:
            - name: logs
              mountPath: /fluentd/log/
            - name: fluentd-config
              mountPath: /fluentd/etc/
        volumes:
        - name: logs
          emptyDir: {}
        - name: fluentd-config
          emptyDir: {}

# ---------- WORKER SERVICE (PROMETHEUS) -----------
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app.kubernetes.io/component: worker
      app.kubernetes.io/name: glitchtip-jira-bridge
    name: glitchtip-jira-bridge-worker
  spec:
    ports:
    - name: "8000"
      port: ${{GJB_WORKER_METRICS_PORT}}
      targetPort: ${{GJB_WORKER_METRICS_PORT}}
    selector:
      app.kubernetes.io/component: worker
      app.kubernetes.io/name: glitchtip-jira-bridge

parameters:
# Global config
- name: IMAGE
  description: Image to use for glitchtip-jira-bridge
  value: "quay.io/app-sre/glitchtip-jira-bridge"
  required: true

- name: IMAGE_TAG
  description: glitchtip-jira-bridge version
  value: "latest"
  required: true

- name: GJB_SLACK_WEBHOOK_URL
  description: Slack webhook url to use
  value: ""
  required: false

- name: GJB_SLACK_CHANNEL
  description: Slack channel to send notifications to
  value: "sd-app-sre-reconcile"
  required: true

- name: GJB_SLACK_ICON_EMOJI
  description: Slack icon emoji to use
  value: ":app-sre:"
  required: true

- name: GJB_SLACK_USERNAME
  description: Slack username to use
  value: "sd-app-sre-bot"
  required: true

# Web config
- name: GJB_APP_PORT
  description: Port to expose the web app on
  value: "8080"
  required: true

## Web Pod limits
- name: GJB_WEB_REPLICAS
  description: Web replicas
  value: "3"
  required: true

- name: GJB_WEB_MEMORY_REQUESTS
  description: Web memory requests
  value: "200Mi"
  required: true

- name: GJB_WEB_MEMORY_LIMITS
  description: Web memory limits
  value: "200Mi"
  required: true

- name: GJB_WEB_CPU_REQUESTS
  description: Web cpu requests
  value: "100m"
  required: true

# Worker config
- name: GJB_WORKER_METRICS_PORT
  description: Port to expose the web app on
  value: "8000"
  required: true

## Worker Pod limits
- name: GJB_WORKER_REPLICAS
  description: Worker replicas
  value: "3"
  required: true

- name: GJB_WORKER_MEMORY_REQUESTS
  description: Worker memory requests
  value: "200Mi"
  required: true

- name: GJB_WORKER_MEMORY_LIMITS
  description: Worker memory limits
  value: "200Mi"
  required: true

- name: GJB_WORKER_CPU_REQUESTS
  description: Worker cpu requests
  value: "100m"
  required: true
